/*#include <bits/stdc++.h>
 
using namespace std;

unordered_set<int> s; 

void allSubset(vector<int> & v, int idx, int sum)
{
    s.insert(sum);
    
    for(int i = idx ; i < v.size() ; i++)
    {
        sum += v[i] ; 
        allSubset(v, i+1, sum); 
        sum -= v[i] ; 
    }
}

int main()
{
    int n ; 
    cin >> n ; 
    vector<int> v(n);
    
    for(int i = 0 ; i < n ; i++)
        cin >> v[i] ; 
        
    allSubset(v, 0, 0); 
    
    for(int i = 1 ; i <= 500 ; i++)
    {
        if(s.find(i) == s.end())
        {
            cout << i ; 
            break ;
        }
    }
}

*/

/*#include <bits/stdc++.h>
 
using namespace std;

int main()
{
    int n ; 
    cin >> n ; 
    vector<int> v(n);
    
    for(int i = 0 ; i < n ; i++)
        cin >> v[i] ; 
        
    vector<vector<bool>> dp(n+1, vector<bool>(6001, false)); 
    
    for(int i = 0 ; i <= n ; i++)
        dp[i][0] = true ; 

    for(int i = 1 ; i <= n ; i++)
    {
        for(int j = 1 ; j <= 6000 ; j++)
        {
            if(j < v[i-1])
                dp[i][j] = dp[i-1][j] ; 
            else
                dp[i][j] = dp[i-1][j] || dp[i-1][j-v[i-1]] ; 
        }
    }
    
    for(int i = 1 ; i <= 6000 ; i++)
    {
        if(dp[n][i] == false)
        {
            cout << i ; 
            break ;
        }
    }

}*/



/*

1000
7 36 9 66 89 18 40 23 95 54 59 46 12 88 34 54 9 90 87 54 57 51 2 70 24 71 87 13 56 54 51 58 13 9 62 40 81 52 7 45 41 61 6 76 55 73 75 22 62 90 38 91 94 11 93 1 39 97 9 16 24 81 96 3 86 45 35 97 26 25 9 3 20 67 11 74 89 72 56 11 98 10 33 41 1 1 39 48 51 97 13 69 13 25 93 24 86 72 31 41 5 40 19 34 35 79 21 83 99 38 54 36 69 7 85 67 76 10 4 11 63 74 13 25 32 62 82 40 69 72 67 64 27 59 48 100 91 50 83 21 95 22 21 18 50 88 23 77 64 28 96 72 44 30 7 7 80 38 19 27 88 69 8 45 18 90 88 71 36 37 5 13 95 33 33 16 56 64 41 34 56 85 69 90 27 20 15 36 39 2 34 70 57 83 93 90 64 59 41 89 51 84 21 40 99 7 70 75 27 25 92 93 6 38 85 71 52 46 66 69 59 86 48 42 31 56 12 35 11 37 40 62 64 26 95 88 59 81 26 36 69 50 88 52 28 3 71 92 52 38 12 38 26 2 10 98 14 97 9 74 24 100 33 20 95 59 47 69 86 51 24 33 23 55 87 50 13 96 20 53 28 35 48 58 77 49 40 65 70 59 98 70 59 69 100 75 93 100 92 15 48 54 43 56 74 71 51 3 93 52 13 41 12 35 41 40 51 67 2 83 34 85 78 64 15 81 78 33 63 23 93 34 57 4 78 58 54 43 83 64 48 38 54 32 49 64 26 12 20 81 39 54 56 91 94 89 77 33 4 50 24 3 84 81 89 64 14 26 41 67 89 8 3 65 97 92 98 7 59 7 1 43 84 63 47 7 27 7 66 42 54 52 58 67 88 52 8 12 41 42 73 13 85 90 82 91 48 37 7 17 19 40 85 94 12 61 16 35 32 65 30 64 20 16 80 16 45 60 37 50 16 35 61 75 96 8 66 35 71 91 24 49 67 20 81 69 45 29 22 93 23 31 55 50 27 87 24 12 86 79 69 58 57 6 1 50 55 34 51 13 40 58 43 60 86 93 1 61 38 77 87 91 34 95 2 82 4 33 69 60 68 22 35 80 19 58 32 22 81 62 98 97 42 83 39 50 68 44 56 72 55 46 25 64 55 66 84 37 67 49 94 1 60 85 3 59 71 30 55 68 10 18 20 21 90 51 28 55 31 52 17 15 98 26 52 10 43 97 26 24 83 47 48 35 14 75 71 10 66 93 72 97 24 56 75 100 38 23 22 72 4 96 87 5 27 2 71 15 12 26 16 64 19 22 64 56 89 84 26 82 33 78 49 8 67 63 80 1 89 88 76 86 33 2 98 13 14 90 47 92 7 71 36 29 23 85 60 12 5 19 2 36 56 57 94 99 7 32 17 52 1 26 45 87 99 11 49 56 65 21 11 95 70 7 58 86 15 80 100 95 59 77 73 91 26 28 62 16 38 94 14 61 44 3 37 7 61 89 94 95 9 68 44 19 86 4 86 16 74 25 68 31 56 62 83 26 54 27 64 74 64 11 16 31 82 54 31 78 14 16 31 46 80 43 38 93 20 35 95 46 39 49 38 57 92 69 46 100 61 91 74 42 47 51 12 84 34 42 42 77 6 14 64 11 63 97 42 38 49 12 5 9 82 83 62 72 18 58 71 32 24 90 46 79 84 89 59 34 3 32 71 85 52 34 75 86 72 38 36 91 85 76 59 9 69 23 41 82 98 63 6 84 53 74 24 76 28 8 30 10 83 36 95 76 67 14 75 68 80 54 92 53 90 26 17 82 46 64 30 68 95 13 100 84 14 54 98 72 8 10 87 81 78 32 53 31 74 60 41 100 26 78 90 11 69 32 78 85 55 75 22 89 26 58 2 69 18 86 87 90 1 24 24 28 34 24 56 16 72 14 90 86 19 73 2 13 99 18 100 7 62 96 65 74 39 28 43 23 66 3 60 93 52 51 64 3 95 52 45 75 45 97 18 14 88 34 57 31 54 26 9 71 76 44 4 27 20 54 51 71 80 83 93 57 11 35 20 96 17 36 43 23 72 93 71 65 3 87 68 33 60 49 99 92 97 100 67 10 9 44 68 31 26 39 29 73 10 81 60 87 48 29 11 50 71 28 91 60 76 5 22 49 17 14 19 3 97 57 100 28 90 68 73 82 97 100 71 52 99 40 13 46 69 34 92 66 96 15 32 50 6 81 42 37 16 13 87 21 81 34


*/


#include <bits/stdc++.h>
 
using namespace std;

int sums(vector<int> &v)
{
    int s = 0 ; 
    for(int i = 0 ; i < v.size() ; i++)
        s += v[i] ; 
        
    return s ; 
}

int main()
{
    int n ; 
    cin >> n ; 
    vector<int> v(n);
    
    for(int i = 0 ; i < n ; i++)
        cin >> v[i] ; 
        
    int sum = 15000 ; 
        
    vector<vector<bool>> dp(n+1, vector<bool>(sum+1, false)); 
    
    for(int i = 0 ; i <= n ; i++)
        dp[i][0] = true ; 

    for(int i = 1 ; i <= n ; i++)
    {
        for(int j = 1 ; j <= sum ; j++)
        {
            if(j < v[i-1])
                dp[i][j] = dp[i-1][j] ; 
            else
                dp[i][j] = dp[i-1][j] || dp[i-1][j-v[i-1]] ; 
        }
    }

    
    int i = 0 ;
    for(i = 1 ; i <= sum ; i++)
    {
        if(dp[n][i] == false)
        {
            cout << i << endl ; 
            break ;
        }
    }
    
    if(i > sum)
    {
        cout << sums(v) + 1 ; 
    } 
}